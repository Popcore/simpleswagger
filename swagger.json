{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This application is a simple HTTP server documented using Swagger.\n\nIt will demonstrate some of possible comment annotations and features\nthat are available to turn go code into a fully compliant swagger 2.0 spec.",
    "title": "Simple Swagger API",
    "contact": {
      "email": "marco@thingful.net"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost",
  "paths": {
    "/items": {
      "get": {
        "description": "The items returned can be optionally filtered .",
        "tags": [
          "items"
        ],
        "summary": "Returns a collection of items item description.",
        "operationId": "items-operation",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Query",
            "description": "the item unique identifier",
            "name": "q",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/itemResponse"
          },
          "404": {
            "$ref": "#/responses/errorNotFound"
          }
        }
      }
    }
  },
  "definitions": {
    "Data": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          },
          "x-go-name": "Items"
        }
      },
      "x-go-package": "github.com/thingful/simpleswagger/types"
    },
    "Err": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorResponse"
        }
      },
      "x-go-package": "github.com/thingful/simpleswagger/types"
    },
    "ErrorResponse": {
      "description": "ErrorResponse is the object used to wrap errors information",
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "description": "The HTTP status code",
          "type": "integer",
          "format": "int64",
          "x-go-name": "HTTPStatus"
        },
        "message": {
          "description": "The error message",
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/thingful/simpleswagger/types"
    },
    "Item": {
      "description": "An item is a generic data resource used by this demo application.\n\nAn item must have an id and a name, as well as an optional colour property.",
      "type": "object",
      "title": "Item represents the item for this application",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "colour": {
          "description": "the colour of the item",
          "type": "string",
          "x-go-name": "Colour"
        },
        "id": {
          "description": "the item identifier",
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "x-go-name": "ID"
        },
        "name": {
          "description": "the name of the item",
          "type": "string",
          "minLength": 3,
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/thingful/simpleswagger/types"
    },
    "ResponseBody": {
      "type": "object",
      "properties": {
        "code": {
          "description": "The HTTP code",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "details": {
          "description": "Details about the HTTP request made by the client",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Details"
        },
        "message": {
          "description": "The response message",
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/thingful/simpleswagger/types"
    }
  },
  "responses": {
    "errorNotFound": {
      "description": "Error Not Found",
      "schema": {
        "$ref": "#/definitions/Err"
      }
    },
    "itemResponse": {
      "description": "Success",
      "schema": {
        "$ref": "#/definitions/Data"
      }
    },
    "successResponse": {
      "description": "Success",
      "schema": {
        "$ref": "#/definitions/ResponseBody"
      }
    }
  }
}