package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// ListPetsReader is a Reader for the ListPets structure.
type ListPetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListPetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListPetsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListPetsOK creates a ListPetsOK with default headers values
func NewListPetsOK() *ListPetsOK {
	return &ListPetsOK{}
}

/*ListPetsOK handles this case with default header values.

A GenericResponse is the default response returned.
*/
type ListPetsOK struct {
	Message string
}

func (o *ListPetsOK) Error() string {
	return fmt.Sprintf("[GET /pets][%d] listPetsOK ", 200)
}

func (o *ListPetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header message
	o.Message = response.GetHeader("message")

	return nil
}

// NewListPetsDefault creates a ListPetsDefault with default headers values
func NewListPetsDefault(code int) *ListPetsDefault {
	return &ListPetsDefault{
		_statusCode: code,
	}
}

/*ListPetsDefault handles this case with default header values.

A GenericError is the default error message that is generated.
*/
type ListPetsDefault struct {
	_statusCode int

	Payload ListPetsDefaultBody
}

// Code gets the status code for the list pets default response
func (o *ListPetsDefault) Code() int {
	return o._statusCode
}

func (o *ListPetsDefault) Error() string {
	return fmt.Sprintf("[GET /pets][%d] listPets default  %+v", o._statusCode, o.Payload)
}

func (o *ListPetsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ListPetsDefaultBody list pets default body
swagger:model ListPetsDefaultBody
*/
type ListPetsDefaultBody struct {

	// An optional field name to which this validation applies
	// Required: true
	FieldName *string `json:"FieldName"`

	// The validation message
	// Required: true
	Message *string `json:"Message"`
}

// Validate validates this list pets default body
func (o *ListPetsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFieldName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListPetsDefaultBody) validateFieldName(formats strfmt.Registry) error {

	if err := validate.Required("listPets default"+"."+"FieldName", "body", o.FieldName); err != nil {
		return err
	}

	return nil
}

func (o *ListPetsDefaultBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("listPets default"+"."+"Message", "body", o.Message); err != nil {
		return err
	}

	return nil
}
